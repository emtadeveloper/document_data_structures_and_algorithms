/*
=====================================================================================================================================================================
=====================================================================================================================================================================

sort :  در جاوا اسکریپت برای مرتب‌سازی آرایه‌ها استفاده می‌شود. این متد در بسیاری از موارد ساده و کارآمد است، اما دارای مشکلات و محدودیت‌هایی است که باید هنگام استفاده از آن به آن توجه کنید

در ادامه، این مشکلات به همراه مثال‌ها توضیح داده شده‌اند

=====================================================================================================================================================================

1. مرتب‌سازی به صورت پیش‌فرض بر اساس یونیکد ( Lexicographical Order )

مرتب می‌کند، حتی اگر آرایه شامل اعداد باشد. این می‌تواند منجر به نتایج غیرمنتظره شود Lexicographical  مقادیر را به صورت پیش‌فرض به شکل رشته‌ای  sort متد

*/
const numbers = [10, 2, 1, 20];

console.log(numbers.sort());

// خروجی: [1, 10, 2, 20]

// مرتب‌سازی به صورت رشته‌ای انجام شده است

//  تعریف کنید compare function برای مرتب‌سازی صحیح اعداد، باید یک تابع مقایسه

const sortedNumbers = numbers.sort((a, b) => a - b);
console.log(sortedNumbers);

// خروجی: [1, 2, 10, 20]

/* =====================================================================================================================================================================

2. رفتار ناهمگن برای انواع داده‌ها

ممکن است رفتار غیرقابل پیش‌بینی داشته باشد sort اگر آرایه حاوی انواع داده‌های مختلف (مانند اعداد، رشته‌ها، و اشیاء) باشد، متد

*/
const mixed = [10, "apple", 2, "banana"];

console.log(mixed.sort());

// خروجی: ['10', '2', 'apple', 'banana']

// اعداد به عنوان رشته در نظر گرفته شده‌اند

// آرایه را به نوع داده‌ی خاصی تبدیل کنید یا از مرتب‌سازی دستی استفاده کنید

/*=====================================================================================================================================================================

3. تغییر آرایه اصلی (In-place Sorting)

است mutable آرایه اصلی را تغییر می‌دهد  sort متد

*/
const arr = [3, 1, 2];
arr.sort();
console.log(arr);

// خروجی: [1, 2, 3]

// آرایه اصلی تغییر کرده است

// برای جلوگیری از تغییر آرایه اصلی، ابتدا یک کپی از آرایه بسازید

const originalArray = [3, 1, 2];
const sortedArray = [...originalArray].sort();
console.log(sortedArray);

// خروجی: [1, 2, 3]

console.log(originalArray);

// خروجی: [3, 1, 2]

// =====================================================================================================================================================================
// =====================================================================================================================================================================
